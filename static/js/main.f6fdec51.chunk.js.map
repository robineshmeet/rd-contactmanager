{"version":3,"sources":["context.js","components/layout/Header.jsx","components/layout/TextInputGroup.jsx","components/contacts/AddContact.jsx","components/contacts/EditContact.jsx","components/contacts/Contact.jsx","components/contacts/Contacts.jsx","components/pages/About.jsx","components/pages/NotFound.jsx","components/EntryPoint.jsx","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","PureComponent","Consumer","Header","branding","className","href","to","icon","faHome","faPlus","faQuestion","defaultProps","TextInputGroup","label","name","placeholder","onChange","error","htmlFor","classnames","AddContact","email","phone","errors","onSubmit","e","a","preventDefault","newContact","post","history","push","target","bind","EditContact","updateContact","match","params","put","Contact","showContactInfo","onDeleteClick","delete","faSortDown","onClick","style","cursor","faTrash","color","float","faEdit","marginRight","Contacts","deleteContact","newContacts","Fragment","key","deleteClickHandler","About","EntryPoint","exact","path","component","NotFound","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f6fdec51.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends React.PureComponent {\r\n  state = {\r\n    contacts: [\r\n      // {\r\n      //   id: 1,\r\n      //   name: 'Robin Dhiman',\r\n      //   email: 'robin@gmail.com',\r\n      //   phone: 111 - 111 - 1111,\r\n      // },\r\n      // {\r\n      //   id: 2,\r\n      //   name: 'Sachin Dhiman',\r\n      //   email: 'sachin@gmail.com',\r\n      //   phone: 222 - 222 - 2222,\r\n      // },\r\n      // {\r\n      //   id: 3,\r\n      //   name: 'Roshan Dhiman',\r\n      //   email: 'roshan@gmail.com',\r\n      //   phone: 333 - 333 - 3333,\r\n      // },\r\n    ],\r\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faPlus, faQuestion } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <FontAwesomeIcon icon={faHome} />\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <FontAwesomeIcon icon={faPlus} />\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <FontAwesomeIcon icon={faQuestion} />\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App',\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text',\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React from 'react';\r\n// import { v4 as uuid } from 'uuid';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nexport default class AddContact extends React.PureComponent {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {},\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: { name: 'Name is required' },\r\n      });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: { email: 'Email is required' },\r\n      });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: { phone: 'Phone is required' },\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n\r\n    dispatch({\r\n      type: 'ADD_CONTACT',\r\n      payload: res.data,\r\n    });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    type=\"email\"\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n// import { v4 as uuid } from 'uuid';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nexport default class EditContact extends React.PureComponent {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: { name: 'Name is required' },\r\n      });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: { email: 'Email is required' },\r\n      });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: { phone: 'Phone is required' },\r\n      });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n\r\n    dispatch({\r\n      type: 'UPDATE_CONTACT',\r\n      payload: res.data,\r\n    });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    type=\"email\"\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSortDown, faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nexport default class Contact extends React.PureComponent {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({\r\n        type: 'DELETE_CONTACT',\r\n        payload: id,\r\n      });\r\n    } catch {\r\n      dispatch({\r\n        type: 'DELETE_CONTACT',\r\n        payload: id,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                <FontAwesomeIcon\r\n                  icon={faSortDown}\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo,\r\n                    })\r\n                  }\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <FontAwesomeIcon\r\n                  icon={faTrash}\r\n                  color=\"red\"\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  style={{ cursor: 'pointer', float: 'right' }}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <FontAwesomeIcon\r\n                    icon={faEdit}\r\n                    color=\"blue\"\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      marginRight: '1rem',\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Ph: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { Consumer } from '../../context';\r\nimport Contact from './Contact';\r\n\r\nclass Contacts extends React.PureComponent {\r\n  deleteContact = (id) => {\r\n    const { contacts } = this.state;\r\n\r\n    const newContacts = contacts.filter((contact) => contact.id !== id);\r\n\r\n    this.setState({\r\n      contacts: newContacts,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  deleteClickHandler={this.deleteContact.bind(this, contact.id)}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <pa className=\"lead\">Sorry,that page does not exist</pa>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { Provider } from '../context';\r\nimport Header from './layout/Header';\r\nimport AddContact from './contacts/AddContact';\r\nimport EditContact from './contacts/EditContact';\r\nimport Contacts from './contacts/Contacts';\r\nimport About from './pages/About';\r\nimport NotFound from './pages/NotFound';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\n\r\nexport default class EntryPoint extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <Provider>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header branding=\"Contact Manager\" />\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Contacts} />\r\n                <Route exact path=\"/contact/add\" component={AddContact} />\r\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\r\n                <Route exact path=\"/about\" component={About} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport './App.css';\n\nimport EntryPoint from './components/EntryPoint';\n\nexport default class App extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <EntryPoint />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}